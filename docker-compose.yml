version: "3"


services:
#  app:
#    build:
#      context: app
#    #    environment:
#    #      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    #    depends_on:
#    #      - kafka
#    ports:
#      - "5000"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net

  #  zookeeper:
  #    image: wurstmeister/zookeeper:3.4.6
  #    ports:
  #      - "2181:2181"
  #
  #  kafka:
  #    image: wurstmeister/kafka:latest
  #    ports:
  #      - "9092:9092"
  #    expose:
  #      - "9093"
  #    environment:
  #      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
  #      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
  #      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
  #      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
  #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #      KAFKA_CREATE_TOPICS: "menu:1:1"
  
#  zookeeper:
#    image: zookeeper:3.4.9
#    hostname: zookeeper
#    ports:
#      - "2181:2181"
#    environment:
#      ZOO_MY_ID: 1
#      ZOO_PORT: 2181
#      ZOO_SERVERS: server.1=zookeeper:2888:3888
#    volumes:
#      - ./data/zookeeper/data:/data
#      - ./data/zookeeper/datalog:/datalog

#  kafka1:
#    image: confluentinc/cp-kafka:5.3.0
#    hostname: kafka1
#    ports:
#      - "9091:9091"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
#      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_BROKER_ID: 1
#    volumes:
#      - ./data/kafka1/data:/var/lib/kafka/data
#    depends_on:
#      - zookeeper
  #  kafka2:
  #    image: confluentinc/cp-kafka:5.3.0
  #    hostname: kafka2
  #    ports:
  #      - "9092:9092"
  #    environment:
  #      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
  #      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
  #      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
  #      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #      KAFKA_BROKER_ID: 2
  #    volumes:
  #      - ./data/kafka2/data:/var/lib/kafka/data
  #    depends_on:
  #      - zookeeper
  #  kafka3:
  #    image: confluentinc/cp-kafka:5.3.0
  #    hostname: kafka3
  #    ports:
  #      - "9093:9093"
  #    environment:
  #      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
  #      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
  #      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
  #      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #      KAFKA_BROKER_ID: 3
  #    volumes:
  #      - ./data/kafka3/data:/var/lib/kafka/data
  #    depends_on:
  #      - zookeeper

#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    restart: "no"
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka1:19091"
#    depends_on:
#      - kafka1
##      - kafka2
##      - kafka3


  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"
  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"

#  nginx:
#    image: nginx:latest
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#    depends_on:
#      - app
#    ports:
#      - "5100:5100"

networks:
  rabbitmq_go_net:
    driver: bridge